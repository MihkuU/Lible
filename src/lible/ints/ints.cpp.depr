#include <lible/ints/ints.hpp>
#include <lible/ints/oneel/oneel_detail.hpp>

namespace LI = lible::ints;
namespace LIO = lible::ints::one;

// lible::vec2d LI::overlap(const Structure &structure)
// {
//     return LIO::calculate<LIO::Option::overlap>(structure);
// }

// lible::vec2d LI::kineticEnergy(const Structure &structure)
// {
//     return LIO::calculate<LIO::Option::kinetic_energy>(structure);
// }

// lible::vec2d LI::nuclearAttraction(const Structure &structure)
// {
//     return LIO::calculate<LIO::Option::nuclear_attraction>(structure);
// }

// lible::vec2d LI::nuclearAttractionErf(const Structure &structure,
//                                       const std::vector<double> &omega)
// {
//     return LIO::calculate<LIO::Option::nuclear_attraction_erf>(structure, omega);
// }

// std::array<lible::vec2d, 3> LI::dipoleMoment(const std::array<double, 3> &origin,
//                                              const Structure &structure)
// {
//     return LIO::calculate3D<LIO::Option::dipole_moment>(structure, origin);
// }
