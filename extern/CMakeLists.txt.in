cmake_minimum_required(VERSION 3.20)

project(lible_external_libs)

include(ExternalProject)

cmake_host_system_information(RESULT nprocs QUERY NUMBER_OF_PHYSICAL_CORES)

# armadillo library
set(arma_dir "@CMAKE_CURRENT_BINARY_DIR@/arma")
ExternalProject_Add(arma
	URL 					   "@CMAKE_CURRENT_SOURCE_DIR@/armadillo-12.4.1.tar.xz"
	SOURCE_DIR 		           "${arma_dir}"
    CONFIGURE_COMMAND 
		${CMAKE_COMMAND} -E env "${arma_dir}/configure" "${arma_dir}/"
		-DCMAKE_POLICY_VERSION_MINIMUM=3.5
	BUILD_COMMAND     
		${CMAKE_COMMAND} ${arma_dir} . -DCMAKE_INSTALL_PREFIX:PATH=${arma_dir}/build -DBUILD_SHARED_LIBS=OFF
    TEST_COMMAND      ""
	BUILD_ALWAYS	  		   OFF
	DOWNLOAD_EXTRACT_TIMESTAMP FALSE
)

# mpl library
if(@LIBLE_USE_MPI@)
	set(mpl_dir "@CMAKE_CURRENT_BINARY_DIR@/mpl")
	ExternalProject_Add(mpl
		URL	                       "@CMAKE_CURRENT_SOURCE_DIR@/mpl-master.zip"
    	SOURCE_DIR                 "${mpl_dir}"
	    CONFIGURE_COMMAND          
			${CMAKE_COMMAND} -S "${mpl_dir}" -B "${mpl_dir}/build" -DCMAKE_INSTALL_PREFIX:PATH=${mpl_dir}/build
			-DCMAKE_POLICY_VERSION_MINIMUM=3.5
	    BUILD_COMMAND              "" 
	    INSTALL_COMMAND            
			${CMAKE_COMMAND} --install "${mpl_dir}/build"
	    TEST_COMMAND               ""
		BUILD_ALWAYS			   OFF
	    DOWNLOAD_EXTRACT_TIMESTAMP FALSE
	)
endif()
